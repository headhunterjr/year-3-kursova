@{
    ViewData["Title"] = "Алгоритм Дейкстри";
    ViewData["SolveAction"] = "SolveDijkstra";
    ViewData["SolveManualAction"] = "SolveDijkstraManual";
    ViewData["RequiresSourceVertex"] = true;
}

<div class="algorithm-page">
    <h1 class="algorithm-title">Алгоритм Дейкстри</h1>
    <div class="algorithm-description">
        <ul>
            <li>Алгоритм Дейкстри - це алгоритм пошуку найкоротших шляхів між вершинами зваженого графа.</li>
            <li>Алгоритм працює лише для неорієнтованих графів, тому матриця суміжності графа повинна бути симетричною, а вага ребер — невід'ємною. При введенні матриці вручну, симетричні значення вводяться автоматично.</li>
            <li>Для використання алгоритму, оберіть спосіб задання матриці суміжності (у випадку відсутності ребра залишіть клітину порожньою), введіть початкову вершину, від якої будуть обчислені відстані до решти вершин, та натисніть на кнопку нижче.</li>
            <li>Максимальний допустимий розмір матриці — 100х100.</li>
            <li>Результат буде поданий у вигляді таблиці (Кінцева вершина | Відстань).</li>
        </ul>
    </div>
    <div class="algorithm-input-section">
        @await Html.PartialAsync("_AlgorithmInputForm")
    </div>
</div>

<script src="~/js/shared.js"></script>
<script src="~/js/dijkstra.js"></script>